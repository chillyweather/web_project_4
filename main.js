(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseUrl,r=e.authToken;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._authToken=r}var n,r;return n=t,r=[{key:"_checkResponse",value:function(e){return e.then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return e}))}},{key:"getCardList",value:function(){var e=fetch("".concat(this._baseUrl,"cards"),{headers:{authorization:this._authToken}});return this._checkResponse(e)}},{key:"getUserInfo",value:function(){var e=fetch("".concat(this._baseUrl,"users/me"),{headers:{authorization:this._authToken}});return this._checkResponse(e)}},{key:"updateUserInfo",value:function(e,t){var n=fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})});return this._checkResponse(n)}},{key:"updateProfilePicture",value:function(e){var t=fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})});return this._checkResponse(t)}},{key:"addCard",value:function(e){var t=e.name,n=e.link,r=fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:n})});return this._checkResponse(r)}},{key:"deleteCard",value:function(e){var t=fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}});return this._checkResponse(t)}},{key:"likeCard",value:function(e){var t=fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._authToken,"Content-Type":"application/json"}});return this._checkResponse(t)}},{key:"dislikeCard",value:function(e){var t=fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}});return this._checkResponse(t)}}],r&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_showInputError",(function(e,t){var n=o._settings,r=n.inputErrorClass,i=n.errorClass,u=o._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(r),u.textContent=t,u.classList.add(i)})),r(this,"_hideInputError",(function(e){var t=o._settings,n=t.inputErrorClass,r=t.errorClass,i=o._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(n),i.classList.remove(r),i.textContent=""})),r(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),r(this,"_toggleButtonState",(function(){var e=o._settings.inactiveButtonClass;o._hasInvalidInput()?(o._buttonElement.classList.add(e),o._buttonElement.disabled=!0):(o._buttonElement.classList.remove(e),o._buttonElement.disabled=!1)})),r(this,"_checkInputValidity",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),r(this,"_setEventListeners",(function(){var e=o._settings,t=e.inputSelector,n=e.submitButtonSelector;o._buttonElement=o._formElement.querySelector(n),o._inputList=Array.from(o._formElement.querySelectorAll(t)),o._toggleButtonState(),o._inputList.forEach((function(e){e.addEventListener("input",(function(){o._checkInputValidity(e),o._toggleButtonState()}))}))})),this._settings=t,this._formElement=n}var t,o;return t=e,(o=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}}])&&n(t.prototype,o),e}();const i=o;function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){var n=t.userNameSelector,r=t.userJobSelector,o=t.userAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameElement=document.querySelector(n),this._userJobElement=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._userNameElement.textContent,userJob:this._userJobElement.textContent}}},{key:"setUserInfo",value:function(e,t,n){this._userNameElement.textContent=e,this._userJobElement.textContent=t,this._userAvatar.style.backgroundImage="url(".concat(n,")")}}])&&u(t.prototype,n),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userId=i,this._ownerId=t.owner._id,this._name=t.name,this._link=t.link,this._id=t._id,this._likes=t.likes,this._handleDeleteCard=o,this._elementSelector=n,this._handleCardClick=r,this._handleLikeIcon=u}var t,n;return t=e,(n=[{key:"_setEventListeners",value:function(){var e=this;this._likesCounter=this._element.querySelector(".element__like-counter"),this._element.querySelector(".element__like-button").addEventListener("click",(function(){e._handleLikeIcon(e._id)})),this._element.querySelector(".element__trash-button").addEventListener("click",(function(){e._handleDeleteCard(e._id)})),this._element.querySelector(".element__image").addEventListener("click",(function(){e._handleCardClick()}))}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"_getTemplate",value:function(){return document.querySelector(this._elementSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"getId",value:function(){return this._id}},{key:"updateLikes",value:function(e){var t=this._element.querySelector(".element__like-counter"),n=this._element.querySelector(".element__like-button");t.textContent=e,n.classList.toggle("element__like-button_state_active")}},{key:"getView",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._element.querySelector(".element__like-counter").textContent=this._likes.length,this._ownerId!==this._userId&&(this._element.querySelector(".element__trash-button").style.display="none"),this._isLiked()&&this._element.querySelector(".element__like-button").classList.toggle("element__like-button_state_active"),this._setEventListeners(),this._element}}])&&c(t.prototype,n),e}();const s=l;function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var _=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),p(this,"_handleOverlayClick",(function(e){e.target.classList.contains("popup_opened")&&n.close()})),p(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),this._popupElement=document.querySelector(t),this._submitButton=this._popupElement.querySelector(".popup__submit-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose),document.addEventListener("click",this._handleOverlayClick)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose),document.removeEventListener("click",this._handleOverlayClick)}},{key:"setButtonText",value:function(e){this._submitButton&&(this._submitButton.textContent=e)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()}))}}])&&f(t.prototype,n),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},m(e,t,n||e)}function d(e,t){return d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},d(e,t)}function v(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function b(e){return b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},b(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._popupImage=t,r._popupImageCaption=n,r}return t=u,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._popupImageCaption.textContent=n,this._popupImage.src=t,this._popupImage.alt="Picture of ".concat(n),m(b(u.prototype),"open",this).call(this)}}])&&y(t.prototype,n),u}(_);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function w(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return C(e)}function C(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function O(e,t,n){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},O(e,t,n||e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=L(t);if(n){var o=L(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return w(this,e)});function o(e,t){var n,i,u,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),j(C(u=r.call(this,e)),"_getInputValues",(function(){var e={};return u.inputs.forEach((function(t){e[t.name]=t.value})),e})),j(C(u),"setEventListeners",(function(){O((n=C(u),L(o.prototype)),"setEventListeners",n).call(n),u._form.addEventListener("submit",(function(){u._submitHandler(u._getInputValues())}))})),j(C(u),"close",(function(){u._form.reset(),O((i=C(u),L(o.prototype)),"close",i).call(i)})),u._submitHandler=t,u._form=u._popupElement.querySelector(".popup__content"),u.inputs=function(e){if(Array.isArray(e))return E(e)}(a=u._form.querySelectorAll(".popup__submit-text"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(a)||function(e,t){if(e){if("string"==typeof e)return E(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?E(e,t):void 0}}(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),u}return o}(_);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function R(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return x(e)}function x(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function A(e,t,n){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},A(e,t,n||e)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}const U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function u(e,t){var n,r,o,a,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),c=function(){A((n=x(r),B(u.prototype)),"setEventListeners",n).call(n),r._form.addEventListener("submit",(function(e){e.preventDefault(),r._submitHandler()}))},(a="setEventListeners")in(o=x(r=i.call(this,e)))?Object.defineProperty(o,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):o[a]=c,r._submitHandler=t,r._form=r._popupElement.querySelector(".popup__content"),r}return t=u,(n=[{key:"setAction",value:function(e){this._submitHandler=e}}])&&P(t.prototype,n),u}(_);function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&V(t.prototype,n),e}(),N={inputSelector:".popup__submit-text",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_type_inactive",inputErrorClass:"popup__submit-text_type_error",errorClass:"popup__submit-text-error_type_active"},J=document.querySelector(".popup__content_type_edit-profile"),z=document.querySelector(".popup__content_type_add-element"),H=document.querySelector(".popup__content_type_profile-avatar"),M=document.querySelector(".popup__submit-text_content_name"),$=document.querySelector(".popup__submit-text_content_about"),F=(document.querySelector(".popup_type_preview"),document.querySelector(".popup__image-preview")),G=document.querySelector(".popup__image-caption"),K=(document.querySelector(".popup__submit-button"),document.querySelector(".profile__edit-button")),Q=document.querySelector(".profile__add-button"),W=document.querySelector(".profile__avatar-edit-button");function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.querySelector(".profile__avatar"),document.querySelector(".element__trash-button");var Y,Z=new t({baseUrl:"https://around.nomoreparties.co/v1/group-12/",authToken:"a0741150-1ecd-4e0a-82be-ba6cc5789e2b"}),ee=new i(N,J),te=new i(N,z),ne=new i(N,H),re=new U(".popup_type_confirm-delete"),oe=new a({userNameSelector:".profile__name",userJobSelector:".profile__about",userAvatarSelector:".profile__avatar"});Promise.all([Z.getCardList(),Z.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return X(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];function u(e,t){var n=new s(e,t,(function(){ie.open(e)}),(function(e){re.open(),re.setAction((function(){Z.deleteCard(e).then((function(){n.remove(),re.close()})).catch((function(e){console.log(e)}))}))}),Y,(function(t){var r=e.likes.some((function(e){return e._id===Y}));r?(console.log(r),Z.dislikeCard(t).then((function(e){n.updateLikes(e.likes.length)})).catch((function(e){console.log(e)}))):Z.likeCard(t).then((function(e){n.updateLikes(e.likes.length)})).catch((function(e){console.log(e)}))}));return n.getView()}oe.setUserInfo(i.name,i.about,i.avatar),Y=i._id,K.addEventListener("click",(function(){var e=oe.getUserInfo();M.value=e.userName,$.value=e.userJob,ee.resetValidation(),a.open()}));var a=new T(".popup_type_profile",(function(e){a.setButtonText("Saving..."),Z.updateUserInfo(e.name,e.about).then((function(t){oe.setUserInfo(e.name,e.about,t.avatar),a.close()})).catch((function(e){console.log(e)})).finally((function(){a.setButtonText("Save")}))}));W.addEventListener("click",(function(e){e.preventDefault(),ne.resetValidation(),c.open()}));var c=new T(".popup_type_profile-avatar",(function(e){c.setButtonText("Saving..."),Z.updateProfilePicture(e["avatar-link"]).then((function(e){oe.setUserInfo(e.name,e.about,e.avatar),c.close()})).catch((function(e){console.log(e)})).finally((function(){c.setButtonText("Save")}))})),l=new D({items:o,renderer:function(e){var t=u(e,"#element-template");l.addItem(t)}},".elements__container");Q.addEventListener("click",(function(){te.resetValidation(),f.open()}));var f=new T(".popup_type_add-element",(function(e){f.setButtonText("Saving..."),Z.addCard(e).then((function(e){var t=u(e,"#element-template");l.addItem(t),f.close()})).catch((function(e){console.log(e)})).finally((function(){f.setButtonText("Create")}))}));f.setEventListeners(),l.renderItems(),a.setEventListeners(),c.setEventListeners()}));var ie=new g(".popup_type_preview",F,G);ie.setEventListeners(),re.setEventListeners(),ee.enableValidation(),te.enableValidation(),ne.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,